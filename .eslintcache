[{"F:\\React\\react-practice\\todo_list\\src\\index.js":"1","F:\\React\\react-practice\\todo_list\\src\\App.js":"2","F:\\React\\react-practice\\todo_list\\src\\Components\\Header.js":"3","F:\\React\\react-practice\\todo_list\\src\\Components\\Main.js":"4","F:\\React\\react-practice\\todo_list\\src\\Components\\Footer.js":"5"},{"size":154,"mtime":1608980405128,"results":"6","hashOfConfig":"7"},{"size":269,"mtime":1609004303737,"results":"8","hashOfConfig":"7"},{"size":171,"mtime":1608980831009,"results":"9","hashOfConfig":"7"},{"size":2232,"mtime":1609064270378,"results":"10","hashOfConfig":"7"},{"size":181,"mtime":1609004441097,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"ytppr3",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"F:\\React\\react-practice\\todo_list\\src\\index.js",[],["25","26"],"F:\\React\\react-practice\\todo_list\\src\\App.js",[],"F:\\React\\react-practice\\todo_list\\src\\Components\\Header.js",[],"F:\\React\\react-practice\\todo_list\\src\\Components\\Main.js",["27","28","29","30"],"import React, {useState} from 'react'\r\n\r\nexport default function Main() {\r\n    \r\nconst [task, setTask] = useState(\"\");\r\nconst [taskList, setTaskList] = useState([]);\r\n    \r\nconst handleChange = (e) => {\r\n    setTask(e.target.value);\r\n}    \r\n\r\nconst AddTask = () => {\r\n    console.log(task);\r\n    if(task != \"\")\r\n    {\r\n        const taskDetails = {\r\n            id : Math.floor(Math.random()*100),\r\n            value: task,\r\n            isCompleted: false\r\n        }\r\n        setTaskList([...taskList, taskDetails]);\r\n    }\r\n}\r\n\r\nconst deleteTask = (e, id) => {\r\n    e.preventDefault();\r\n    setTaskList(taskList.filter((t) => t.id != id))\r\n}\r\n\r\nconst doneTask = (e, id) => {\r\n    e.preventDefault();\r\n    const element = taskList.findIndex(i => i.id == id);\r\n\r\n    //copy array into a new variable\r\n    const newTaskList = [...taskList];\r\n\r\n    //editing our element\r\n    newTaskList[element] = {\r\n        ...newTaskList[element],\r\n        isCompleted : true\r\n    };\r\n\r\n    setTaskList(newTaskList)\r\n\r\n}\r\n\r\nconst editTask = (e, id) => {\r\n\r\n    e.preventDefault();\r\n    const element = taskList.findIndex(i => i.id == id);\r\n\r\n    //copy array into a new variable\r\n    const newTaskList = [...taskList];\r\n\r\n    //editing our element\r\n    newTaskList[element] = {\r\n        ...newTaskList[element],\r\n        value: true\r\n    }\r\n\r\n    setTaskList(newTaskList)\r\n\r\n}\r\n\r\n\r\n    return (\r\n        <div className=\"Main\">\r\n            <input type=\"text\" placeholder=\"Type your todos\" onChange={(e) => handleChange(e)} />\r\n            <button onClick={AddTask}>Add</button>\r\n            <br />\r\n            {taskList !== [] ? \r\n            <ol>\r\n                {taskList.map(t =>\r\n                    <li className={t.isCompleted ? \"crossText\" : \"not_cross\"}>{t.value}\r\n                    <button onClick={(e) => deleteTask(e, t.id)}>Delete</button>\r\n                        {t.isCompleted ? <button >Completed</button> :\r\n                            <button onClick={(e) => doneTask(e, t.id)}>Completed</button>\r\n                        }\r\n                    <button onClick={(e) => editTask(e, t.id)}>Edit</button>\r\n                    </li>\r\n                    )}\r\n            </ol>    \r\n            : null  }\r\n        </div>\r\n    )\r\n}\r\n","F:\\React\\react-practice\\todo_list\\src\\Components\\Footer.js",[],["31","32"],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":14,"column":13,"nodeType":"39","messageId":"40","endLine":14,"endColumn":15},{"ruleId":"37","severity":1,"message":"38","line":27,"column":45,"nodeType":"39","messageId":"40","endLine":27,"endColumn":47},{"ruleId":"37","severity":1,"message":"41","line":32,"column":50,"nodeType":"39","messageId":"40","endLine":32,"endColumn":52},{"ruleId":"37","severity":1,"message":"41","line":50,"column":50,"nodeType":"39","messageId":"40","endLine":50,"endColumn":52},{"ruleId":"33","replacedBy":"42"},{"ruleId":"35","replacedBy":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.",["44"],["45"],"no-global-assign","no-unsafe-negation"]